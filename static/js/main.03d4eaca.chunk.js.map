{"version":3,"sources":["components/subComponents/Fact.js","components/arrays/AnimalArray.js","components/arrays/FoodArray.js","components/Facts.js","components/Favourites.js","App.js","serviceWorker.js","index.js"],"names":["Fact","props","useState","checked","setChecked","Math","floor","random","cat","length","rand","setRand","updateRandom","newRandom","useEffect","console","log","className","type","src","url","alt","name","property","onClick","removeFav","addFav","AnimalArray","nbr","FoodArray","Showcase","AllArray","setCat","id","updaterandom","Favourites","fav","map","f","key","App","setFav","n","copy","splice","to","Facts","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03d4eaca.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport { FaRegHeart, FaHeart } from 'react-icons/fa'\n\n\nimport '../css/fact.css'\nimport '../css/size/phone.css'\n\n\n\nconst Fact = (props) =>{\n    //--- Add to fav---\n    const [checked, setChecked] = useState(false)\n\n    const addMe = () => {\n        console.log('add me')\n        setChecked(true)\n        props.addFav(props.cat[rand])\n    }\n    const deleteMe = () => {\n        setChecked(false)\n        props.removeFav()\n    }\n    //---END----\n\n    // --- RandomGEN ---\n    const [rand, setRand] = useState(Math.floor(Math.random() * props.cat.length))\n\n    const updateRandom = () => {\n        let newRandom = Math.floor(Math.random() * props.cat.length) \n        if(newRandom !== rand){\n            setRand(newRandom)\n        }else{\n            return updateRandom()\n        }\n    }\n    // --- END ---\n\n    //---wrapper function ---\n    \n    const wrap = () =>{\n        setChecked(false)\n        updateRandom()\n    }\n\n    useEffect( () => {\n        console.log('use effect')\n        updateRandom()\n    }, [] )\n    //---END---\n\n    return(\n    <div className='fact'>\n        <h1>Random {props.cat.length > 0 ? props.cat[rand].type : ''} Fact!</h1>\n        <div className='fact-wrap'>\n            <div className='fact-img'>\n                <img src={props.cat.length > 0 ? props.cat[rand].url : ''} alt={'This is image of' + props.cat.length > 0 ? props.cat[rand].name : ''} />\n            </div>\n            <div className='fact-text-wrap'>\n                <div className=\"fact-text\">\n                    <h2>{props.cat.length > 0 ? props.cat[rand].property : ''}</h2>\n                </div>\n                <div className='fact-nbr'>\n                <h3>#{rand+1}</h3>\n                    {\n                        checked ? \n                       <div className='fact-heart'> <FaHeart onClick={deleteMe} /></div>\n                        :\n                        <div className='fact-heart'><FaRegHeart onClick={() => addMe() } /></div>\n                    }\n\n                    <button onClick={wrap} >New Fact!</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Fact","\nconst AnimalArray=[\n{\n    nbr: '1',\n    type:'Animal',\n    url:'https://i.guim.co.uk/img/media/d7f4108881072a928fefc416ec13d9cd44ff774b/135_126_2479_1487/master/2479.jpg?width=1920&quality=85&auto=format&fit=max&s=4a9dba4f3666faa7f293f931f13342bd',\n    name:'Baby panda',\n    property:'AT BIRTH, A BABY PANDA IS AS SMALL AS A MICE'\n},\n{\n    nbr: '2',\n    type:'Animal',\n    url:'https://upload.wikimedia.org/wikipedia/commons/7/7e/Grolar.JPG',\n    name:'Pizzy bear',\n    property:'IF A POLAR BEAR AND A GRIZZLY BEAR MATE, THEIR OFFSPRING IS CALLED A \"PIZZY BEAR\"'\n},\n{\n    nbr: '3',\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/hmmmm.png',\n    name:'pidgeon',\n    property:'TRAINED PIGEONS CAN TELL THE DIFFERENCE BETWEEN THE PAINTINGS OF PABLO PICASSO AND CLAUDE MONET.'\n},\n{\n    nbr: '4',\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/ill-punch-ya.png',\n    name:'Peacock Mantis',\n    property:'THE PEACOCK MANTIS SHRIMP CAN THROW A PUNCH AT 50 MPH, ACCELERATING QUICKER THAN A .22-CALIBER BULLET.'\n},\n{\n    nbr: '5',\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/iStock_5745380_SMALL.jpg',\n    name:'Chimps',\n    property:'STUDIES HAVE SHOWN THAT WILD CHIMPS IN GUINEA DRINK FERMENTED PALM SAP, WHICH CONTAINS ABOUT 3 PERCENT ALCOHOL BY VOLUME.'\n},\n{\n    nbr: '6',\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/iStock_82119153_SMALL.jpg',\n    name:'Chevrotain',\n    property:'THE CHEVROTAIN IS AN ANIMAL THAT LOOKS LIKE A TINY DEER WITH FANGS'\n},\n{\n    nbr: '7',\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/iStock_41127942_SMALL.jpg',\n    name:'Chapunchin monkeys',\n    property:'CAPUCHIN MONKEYS PEE ON THEIR HANDS TO WASH THEIR FEET.'\n},\n\n\n]\n\n\n\nexport default AnimalArray","const FoodArray=[\n    {\n        nbr: '1',\n        type:'Food',\n        url:'https://upload.wikimedia.org/wikipedia/commons/f/f5/Bird%27s-nest-soup-Miri-Malaysia.jpg',\n        name:'Bird Saliva',\n        property:'Bird’s Saliva Is Actually An Expensive Delicacy'\n    },\n    {\n        nbr: '2',\n        type:'Food',\n        url:'https://nutritionrefined.com/wp-content/uploads/2019/05/healthy-ketchup-homemade-keto-paleo-vegan-500x375.jpg',\n        name:'Ketchup',\n        property:'Ketchup was sold in the 1800 as medicine'\n    },\n    {\n        nbr: '3',\n        type:'Food',\n        url:'http://www.neatorama.com/wp-content/uploads/2009/11/halloween-vegetable-platter-500x375.jpg',\n        name:'Vegetables',\n        property:'The fear of vegetables is called Lachanophobia'\n    },\n    {\n        nbr: '4',\n        type:'Food',\n        url:'https://static.turbosquid.com/Preview/001244/963/0X/3D-chef-hat-toque_DHQ.jpg',\n        name:'tall chef hat',\n        property:'The tall chef hat is called a toque'\n    },\n    {\n        nbr: '5',\n        type:'Food',\n        url:'http://www.catherinecardellinipearls.com/PG/After%201%20week.jpg',\n        name:'Pearls melting in vinegar',\n        property:'Pearls melt in vinegar'\n    },\n    {\n        nbr: '6',\n        type:'Food',\n        url:'https://images-na.ssl-images-amazon.com/images/I/71rAIKxakYL._SX679_.jpg',\n        name:'Onions',\n        property:'Onion is latin for \"Large pearl\"' \n    },\n    {\n        nbr: '7',\n        type:'Food',\n        url:'https://foodaddict725.files.wordpress.com/2016/01/7ae70-peanuts.jpg',\n        name:'Peanus and dynamite',\n        property:'Peanuts can be used to make dynamite'\n    },\n]\n    \n    export default FoodArray","import React,{useState} from 'react'\nimport Fact from './subComponents/Fact'\nimport AnimalArray from './arrays/AnimalArray'\nimport FoodArray from './arrays/FoodArray'\n\n\nconst Showcase = (props) =>{\n\n     //--- Array with all arrays ---\n    const AllArray = [...AnimalArray,...FoodArray]\n     //---  END ---\n\n    // -- Change between categories --\n    const [cat, setCat] = useState([...AnimalArray])\n    \n    const Animal = () =>{\n        setCat(AnimalArray)\n    }\n    const Food = () =>{\n        setCat(FoodArray)\n    }\n    const All = () =>{\n       setCat(AllArray)\n   }\n    // --- END ---\n\n    return(\n        <div>\n            <div className='categories'>\n                <h2 id='cat-animal' onClick={Animal}>Animal facts</h2>\n                <h2  id='cat-food' onClick={Food}>Food facts</h2>\n                <h2  id='cat-random' onClick={All}>Random</h2>\n            </div>\n            <Fact removeFav={props.removeFav} updaterandom={props.updaterandom} addFav={props.addFav} cat={cat}/>\n        </div>\n    )\n}\n\n\n\nexport default Showcase","import React from 'react'\nimport { FaHeart} from 'react-icons/fa'\nimport './css/Favourites.css'\n\nconst Favourites = (props) =>{\n    console.log(props.fav.length > 0 ? props.fav[0].url : '')\n    return(\n        <div id='fav-wrap'>\n        {\n            props.fav.map( (f, key ) => \n            \n            <div className='fav-box' key={key}>\n                <div className='fav-fact-img'>\n                    <img src={f.url} alt={'This is image of' + f.name} />\n                </div>\n                <div className='fav-fact-text-wrap'>\n                    <h2>{f.property}</h2>\n                    <h3 onClick={props.removeFav}> <FaHeart /> </h3>  \n                </div>\n            </div>\n            )\n        }\n        </div>\n    )\n}\n\n\n\nexport default Favourites","import React, {useState} from 'react';\nimport {Link, Router} from '@reach/router'\nimport Facts from './components/Facts'\nimport Favourites from './components/Favourites'\n\nimport './App.css';\n\n\nconst App = () =>{\n  const [fav,setFav] = useState([])\n\n  const addFav = (n) => {\n    setFav([...fav, n])\n  }\n  const removeFav = (n) =>{\n    let copy =[...fav]\n    copy.splice(n,1)\n    setFav(copy)\n  }\n\n\n  return(\n    <div className='site-wrap'>\n      <nav className='top-nav'>\n        <Link to='/'>Facts</Link>\n        <Link to='fav'>Favourites</Link>\n      </nav>\n      <Router >\n        <Facts removeFav={removeFav} addFav={addFav} path='/'/>\n        <Favourites fav={fav} removeFav={removeFav} path='fav' />\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}