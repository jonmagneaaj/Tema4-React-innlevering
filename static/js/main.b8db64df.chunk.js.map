{"version":3,"sources":["components/arrays/FactsArray.js","components/subComponents/Fact.js","App.js","serviceWorker.js","index.js"],"names":["FactsArray","type","url","name","property","Facts","useState","facts","Math","floor","random","length","rand","setRand","className","src","alt","onClick","App","Fact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gQAkDeA,EAjDE,CAAC,MAAQ,CAC1B,CACIC,KAAK,SACLC,IAAI,6EACJC,KAAK,aACLC,SAAS,gDAEb,CACIH,KAAK,SACLC,IAAI,iEACJC,KAAK,aACLC,SAAS,qFAEb,CACIH,KAAK,SACLC,IAAI,oGACJC,KAAK,UACLC,SAAS,oGAEb,CACIH,KAAK,SACLC,IAAI,2GACJC,KAAK,iBACLC,SAAS,0GAEb,CACIH,KAAK,SACLC,IAAI,mHACJC,KAAK,SACLC,SAAS,6HAEb,CACIH,KAAK,SACLC,IAAI,oHACJC,KAAK,aACLC,SAAS,sEAEb,CACIH,KAAK,SACLC,IAAI,oHACJC,KAAK,aACLC,SAAS,6DCREC,G,MA7BD,WAAM,IAAD,EACWC,mBAASN,EAAWK,OAD/B,mBACRE,EADQ,aAESD,mBAASE,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,UAFnD,mBAERC,EAFQ,KAEFC,EAFE,KAQf,OACA,yBAAKC,UAAU,QACX,sCAAYP,EAAMK,GAAMX,KAAxB,UACA,yBAAKa,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKC,IAAKR,EAAMK,GAAMV,IAAKc,IAAK,mBAAqBT,EAAMK,GAAMT,QAErE,yBAAKW,UAAU,kBACX,yBAAKA,UAAU,aACX,4BAAKP,EAAMK,GAAMR,WAErB,yBAAKU,UAAU,YACX,gCAAMF,EAAK,GACX,4BAAQK,QAjBH,WACjBJ,EAAQL,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,WAgB7B,mBCXLO,G,MATH,WAEV,OACE,oCACA,kBAACC,EAAD,SCEgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b8db64df.chunk.js","sourcesContent":["\nconst FactsArray={'Facts':[\n{\n    type:'Animal',\n    url:'https://timedotcom.files.wordpress.com/2014/03/panda.jpeg?w=600&quality=85',\n    name:'Baby panda',\n    property:'AT BIRTH, A BABY PANDA IS AS SMALL AS A MICE'\n},\n{\n    type:'Animal',\n    url:'https://upload.wikimedia.org/wikipedia/commons/7/7e/Grolar.JPG',\n    name:'Pizzy bear',\n    property:'IF A POLAR BEAR AND A GRIZZLY BEAR MATE, THEIR OFFSPRING IS CALLED A \"PIZZY BEAR\"'\n},\n{\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/hmmmm.png',\n    name:'pidgeon',\n    property:'TRAINED PIGEONS CAN TELL THE DIFFERENCE BETWEEN THE PAINTINGS OF PABLO PICASSO AND CLAUDE MONET.'\n},\n{\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/ill-punch-ya.png',\n    name:'Peacock Mantis',\n    property:'THE PEACOCK MANTIS SHRIMP CAN THROW A PUNCH AT 50 MPH, ACCELERATING QUICKER THAN A .22-CALIBER BULLET.'\n},\n{\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/iStock_5745380_SMALL.jpg',\n    name:'Chimps',\n    property:'STUDIES HAVE SHOWN THAT WILD CHIMPS IN GUINEA DRINK FERMENTED PALM SAP, WHICH CONTAINS ABOUT 3 PERCENT ALCOHOL BY VOLUME.'\n},\n{\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/iStock_82119153_SMALL.jpg',\n    name:'Chevrotain',\n    property:'THE CHEVROTAIN IS AN ANIMAL THAT LOOKS LIKE A TINY DEER WITH FANGS'\n},\n{\n    type:'Animal',\n    url:'https://images.mentalfloss.com/sites/default/files/styles/insert_main_wide_image/public/iStock_41127942_SMALL.jpg',\n    name:'Chevrotain',\n    property:'CAPUCHIN MONKEYS PEE ON THEIR HANDS TO WASH THEIR FEET.'\n},\n\n\n]\n}\n\n\nexport default FactsArray","import React,{useState} from 'react'\nimport FactsArray from '../arrays/FactsArray'\nimport '../css/fact.css'\n\n\nconst Facts = () =>{\n    const [facts, setFacts] = useState(FactsArray.Facts)\n    const [rand, setRand] = useState(Math.floor(Math.random() * facts.length))\n\n    const updateRandom = () => {\n        setRand(Math.floor(Math.random() * facts.length))\n    }\n\n    return(\n    <div className='fact'>\n        <h1>Random {facts[rand].type} Fact!</h1>\n        <div className='fact-wrap'>\n            <div className='fact-img'>\n                <img src={facts[rand].url} alt={'This is image of' + facts[rand].name} />\n            </div>\n            <div className='fact-text-wrap'>\n                <div className=\"fact-text\">\n                    <h2>{facts[rand].property}</h2>\n                </div>\n                <div className='fact-nbr'>\n                    <h3>#{rand+1}</h3>\n                    <button onClick={updateRandom} >New Fact!</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    )      \n}\n\nexport default Facts","import React from 'react';\nimport Fact from './components/subComponents/Fact'\n\nimport './App.css';\n\n\nconst App = () =>{\n\n  return(\n    <>\n    <Fact />\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}